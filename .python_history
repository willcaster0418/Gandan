from perf import *
p(1, pp, 1,2,3)
print(time_dict)
p(1, pp, 1,2,3)
print(time_dict)
for i in range(1, 10):
	p(1, pp, 1,2,3)
print(time_dict)
	p(1, pp, 1,2,3)
import socket
import socket as s
ss = s.socket(s.AF_INET, s.SOCK_STREAM)
ss.connect(("127.0.0.1", 9999))
ss.send("ss")
ss.send(bytes("ss",'utf-8'))
class test:
	def __init__(self):
		return
test
test.name
import socket
socket.timeout.name
socket.timeout
type(socket.timeout)
socket.timeout == socket.timeout
e = Exception('some')
e
e.name
str(e)
e = Exception('some','s')
str(e)
e.name
s = "{'issue_code': '066570', 'time': '082501', 'sell_1_price': 90400.0, 'sell_2_price': 90600.0, 'sell_3_price': 90700.0, 'sell_4_price': -0.0, 'sell_5_price': -0.0, 'sell_6_price': -0.0, 'sell_7_price': -0.0, 'sell_8_price': -0.0, 'sell_9_price': -0.0, 'sell_10_price': -0.0, 'sell_1_amt': 6, 'sell_2_amt': 3, 'sell_3_amt': 26, 'sell_4_amt': 0, 'sell_5_amt': 0, 'sell_6_amt': 0, 'sell_7_amt': 0, 'sell_8_amt': 0, 'sell_9_amt': 0, 'sell_10_amt': 0, 'buy_1_price': 90000, 'buy_2_price': -89900, 'buy_3_price': -89800, 'buy_4_price': 0, 'buy_5_price': 0, 'buy_6_price': 0, 'buy_7_price': 0, 'buy_8_price': 0, 'buy_9_price': 0, 'buy_10_price': 0}"
len(s)
a = []
import MMAP
from MW.MMAP import *
m = mmap("./test", 10, 100)
m = MMAP("./test", 10, 100)
from MW.MMAP import *
m = MMAP("test", 10, 10)
import socket
s = socket.socket
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind("127.0.0.1", 20001)
s.bind(("127.0.0.1", 20001))
s.listen(10)
r = s.accept()
data = r.recv(11)
data = r[0].recv(11)
data
some = str(data,"utf-8")
some
from datetime import datetime
d = datetime.strptime("09:00:00:344", "%H%M%S%s")
d
d = datetime.strptime("09:00:00:344", "%H%M%S%ss")
d = datetime.strptime("09:00:00:344", "%H%M%S")
d = datetime.strptime("09:00:00", "%H%M%S")
d = datetime.strftime("09:00:00", "%H%M%S")
d = datetime.strptime("09:00:00", "%H%M%S")
d = datetime.strptime("09:00:00", "%H:%M:%S")
d = datetime.strptime("09:00:00:123", "%H:%M:%S:%ss")
d = datetime.strptime("09:00:00:123", "%H:%M:%S:%s")
d = datetime.strptime("09:00:00:123", "%H:%M:%S:%ss")
d = datetime.strptime("09:00:00:123", "%H:%M:%S:%f")
d
f = open("./105190_mkt.log","r")
for l in f.readlines():
	print(l)
	break
import datetime
s = datetime.datetime.now()
e = datetime.datetime.now()
e - s
(e - s).micro_seconds()
(e - s).microseconds()
dir(e-s)
(e - s).microseconds
(e - s).seconds
v = '#123'
v[0]
v = b'#123'
v[0]
v[0] == 35
v.find(35)
v.find(3)
v.find('3')
v.find(b'3')
v = b'#123#'
v.find(b'#')
v.find(b'#', -1)
v.find(b'#', 0)
v.find(b'3', -1)
v.find(b'3')
v = b'#1233#'
v = b'#12333#'
v.find(b'3', -1)
v.find(b'#', -1)
v.find(b'1', -1)
v.find('1', -1)
v.find(b'1', -1)
v.find(b'1', 0)
v.find(b'3', 0)
v.find(b'#', -1)
v = b'#12333#123'
v.find(b'#', -1)
v.tfind(b'#')
v.trind(b'#')
v.rfind(b'#')
import MW
from MW import *
MMAP("./TEST", 100, 100)
m = MMAP("./TEST", 100, 100)
m.writep
m.writep("some")
m.readp()
m.write("some")
m.read()
m.w("some")
m.write("some")
m.writep("some")
m.readp()
from MW import *
m = MMAP("./TEST", 100, 100)
m.writep("some")
m.readp()
m.writep("some")
m.readp()
m.writep('kkkkkkkkkkkkkkkkkkkkkk')
m.readp()
m.write('kkkkkkkkkkkkkkkkkkkkkk')
m.read()
from MW import *
m = MMAP("./TEST")
m = MMAP("./TEST", 100, 100)
m.writep(u'some')
m.w()
m.r()
m.writep(u'some')
m.r()
m.w()
m.read()
m.r()
m.writep(bytes('some','utf-8'))
m.readp()
m.writep(bytes('some','utf-8'))
m.readp()
m.writep(bytes('sk','utf-8'))
m.readp()
m.writep(bytes('김상헌','utf-8'))
m.readp()
m.writep(bytes('김상헌','utf-8'))
m.read()
m.read()[0]
str(m.read()[0])
str(m.read()[0], 'utf-8')
m.rs(0)
m.read()
from MW import *
m = MMAP("./TEST")
m = MMAP("./TEST", 100, 100)
m.writep(bytes('some','utf-8'))
from MW import *
m = MMAP("./TEST", 100, 100)
m.writep("some")
m.w()
m.r()
m.close()
from MW import *
m = mmap("./TEST", 100, 100)
m = MMAP("./TEST", 100, 100)
m.writep(bytes('some', 'utf-8'))
m.writep(bytes('some'))
m.writep(bytes('some', 'utf-8'))
m.writep(bytes(u'some', 'utf-8'))
m.writep(bytes("some", 'utf-8'))
m.writep(bytes("somelllll", 'utf-8'))
m.writep(bytes("somelllll", "utf-8"))
m.writep(str("somelllll"))
m.writep(bytes("somelllll"))
m.writep("somelllll")
m.writep(bytes("somelllll", 'ascii'))
m.writep(bytes("somelllll", 'utf-8'))
from MW import *
m = mmap("./TEST", 100, 100)
m = MMAP("./TEST", 100, 100)
m.writep(bytes('some', 'utf-8'))
from MW import *
m = MMAP("./TEST", 100, 100)
m.writep(bytes('some', 'utf-8'))
m.close()
dir(m)
import gandan
import Gandan
import MW
MW.__path__
